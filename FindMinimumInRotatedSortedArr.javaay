// Time Complexity: O(logn)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : No

package Interview;

public class MinimumInRotatedSortedArray {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] nums = {11,13,15,17};
		System.out.println(findMin(nums));

	}
	
	public static int findMin(int[] nums) {
		if(nums.length == 0 || nums == null){
            if(nums.length == 1){
                return nums[0];
            }
            return 0;
        }
		
		int n = nums.length;
		int low = 0 ;
		int high = n-1;
		while(low<= high) {
			if(nums[low]< nums[high]) { 
				return nums[low];
			}
			int mid = low + (high -low)/2;
			if(((mid==0) || (nums[mid-1] > nums[mid])) && ((mid == n-1) || (nums[mid+1] > nums[mid]))) {
				return nums[mid];
			} 
			if(nums[low] <= nums[mid]){
				low =mid+1;
			}else {
				high = mid-1;
			}
		}
		return 4567;
	}

}
